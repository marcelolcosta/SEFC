[gcode_macro MCPURGE]
description: Purge filament after load
gcode:
    # Save state
    SAVE_GCODE_STATE NAME=MC_PURGE_state

    # Purge
    MMU_SYNC_GEAR_MOTOR SYNC=1
    G92
    G1 E110 F350
    G92
    # Retract a little to prevent oozing
    G1 E-5 F500
    G92
    MMU_SYNC_GEAR_MOTOR SYNC=1

    # Restore state
    RESTORE_GCODE_STATE NAME=MC_PURGE_state

[gcode_macro MCCUTTIP]
description: Cut filament using the SEFC toolhead with servo
gcode:
    {% set final_eject = params.FINAL_EJECT|default(0)|int %}
    {% set vars = printer['gcode_macro _MMU_FORM_TIP_VARS'] %}
    {% set park_vars = printer['gcode_macro _MMU_PARK'] %}
    {% set unloading_speed_start = vars['unloading_speed_start']|int %}
    {% set unloading_speed = vars['unloading_speed']|int %}
    {% set ramming_volume = vars['ramming_volume']|float %}
    {% set ramming_volume_standalone = vars['ramming_volume_standalone']|float %}
    {% set cooling_tube_length = vars['cooling_tube_length']|float %}
    {% set cooling_tube_position = vars['cooling_tube_position']|float %}
    {% set initial_cooling_speed = vars['initial_cooling_speed']|int %}
    {% set final_cooling_speed = vars['final_cooling_speed']|int %}
    {% set cooling_moves = vars['cooling_moves']|int %}
    {% set toolchange_temp = vars['toolchange_temp']|default(0)|int %}
    {% set use_skinnydip = vars['use_skinnydip']|default(false)|lower == 'true' %}
    {% set use_fast_skinnydip = vars['use_fast_skinnydip']|default(false)|lower == 'true' %}
    {% set skinnydip_distance = vars['skinnydip_distance']|float %}
    {% set dip_insertion_speed = vars['dip_insertion_speed']|int %}
    {% set dip_extraction_speed = vars['dip_extraction_speed']|int %}
    {% set melt_zone_pause = vars['melt_zone_pause']|default(0)|int %}
    {% set cooling_zone_pause = vars['cooling_zone_pause']|default(0)|int %}
    {% set extruder_eject_speed = vars['extruder_eject_speed']|int %}
    {% set parking_distance = vars['parking_distance']|default(0)|float %}
    {% set orig_temp = printer.extruder.target %}
    {% set next_temp = params.NEXT_TEMP|default(orig_temp)|int %}

    # Useful state for customizing operations depending on mode
    {% set runout = printer.mmu.runout %}
    {% set printing = printer.mmu.print_state == 'printing' %}

    SAVE_GCODE_STATE NAME=MC_CUT_TIP_state

    # Execute the cut
    SET_LED LED=rp2040_rgb RED=0 GREEN=0 BLUE=0.2
    SET_SERVO SERVO=headcutter ANGLE=28
    G4 P900
    SET_SERVO SERVO=headcutter ANGLE=90
    G4 P900
    SET_SERVO SERVO=headcutter ANGLE=28
    G4 P900
    SET_SERVO SERVO=headcutter ANGLE=90
    G4 P900
    SET_LED LED=rp2040_rgb RED=0 GREEN=0.2 BLUE=0

    # Restore state
    RESTORE_GCODE_STATE NAME=MC_CUT_TIP_state
